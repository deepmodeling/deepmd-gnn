[build-system]
requires = [
    "scikit-build-core>=0.3.0",
]
build-backend = "scikit_build_core.build"

[project]
name = "deepmd-mace"
dynamic = ["version"]
description = "MACE plugin for DeePMD-kit." 
authors = [
    { name = "Jinzhe Zeng", email = "jinzhe.zeng@rutgers.edu"},
]
license = { file = "LICENSE" }
classifiers = [
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: POSIX :: Linux",
    "Operating System :: MacOS :: MacOS X",
    "Operating System :: Microsoft :: Windows",
    "License :: OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)",
]
dependencies = [
    "torch",
    "deepmd-kit[torch]>=3.0.0b2",
    "mace-torch>=0.3.5",
    "e3nn",
]
requires-python = ">=3.9"
readme = "README.md"
keywords = [
]

[project.scripts]

[project.entry-points."deepmd.pt"]
mace = "deepmd_mace:MACE"

[project.urls]
repository = "https://github.com/njzjz/deepmd_mace"

[project.optional-dependencies]
test = [
    'pytest',
    'pytest-cov',
]

[tool.scikit-build]
wheel.py-api = "py2.py3"
metadata.version.provider = "scikit_build_core.metadata.setuptools_scm"

[tool.scikit-build.cmake.define]
BUILD_PY_IF = true
BUILD_CPP_IF = false

[tool.setuptools_scm]
version_file = "deepmd_mace/_version.py"

[tool.ruff.lint]
select = [
    "ALL",
]
ignore = [
    "PLR0913", # Too many arguments in function definition
    "FBT001",
    "FBT002",
    "N803",
    "FA100",
]

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.lint.isort]
required-imports = [
    "from __future__ import annotations",
]

[tool.ruff.lint.extend-per-file-ignores]
"tests/**/*.py" = [
    "S101", # asserts allowed in tests...
]

[tool.coverage.report]
include = ["deepmd_mace/*"]
